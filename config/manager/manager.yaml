apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    pod-security.kubernetes.io/enforce: restricted  
    pod-security.kubernetes.io/enforce-version: v1.23
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      securityContext:
        # Generally to run as non-root, the GID and UID can be any number
        # between 1 to 65535 (root is 0). These numbers were chosen
        # arbitrarily; HNC can work with any value of fsGroup and runAsUser, so
        # if your pod security policies (PSPs) require something different,
        # feel free to modify these numbers.
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: manager
        image: controller:latest # this is usually overridden by kustomize
        command:
        - /manager
        args:
        - "--webhook-server-port=9443"
        # If /config/default/manager_auth_proxy_patch.yaml is used, the port in
        # --metrics-addr must match the value of --upstream passed to
        # kube-rbac-proxy.
        - "--metrics-addr=:8080"
        - "--max-reconciles=10"
        - "--apiserver-qps-throttle=50"
        - "--excluded-namespace=kube-system"
        - "--excluded-namespace=kube-public"
        - "--excluded-namespace=hnc-system"
        - "--excluded-namespace=kube-node-lease"
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          failureThreshold: 1
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /readyz
            port: 8081
          failureThreshold: 100
          periodSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 150Mi
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      terminationGracePeriodSeconds: 10
