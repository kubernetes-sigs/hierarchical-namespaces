# Note: This file is used for the manual release process.
# We intend to sunset this as we create auto created releases.
steps:
# Build release container image
# Pull source and check out correct tag
- name: gcr.io/cloud-builders/git
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e
    echo Cloning from https://github.com/$_HNC_REPO_OWNER/hierarchical-namespaces
    git clone https://github.com/$_HNC_REPO_OWNER/hierarchical-namespaces
    cd hierarchical-namespaces
    echo Checking out $_HNC_IMG_TAG
    git checkout $_HNC_IMG_TAG
# Build the manifests and the kubectl plugin
- name: golang:1.21
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e
    cd hierarchical-namespaces
    export HNC_REGISTRY=$_HNC_REGISTRY
    export HNC_IMG_NAME=$_HNC_IMG_NAME
    export HNC_IMG_TAG=$_HNC_IMG_TAG
    export HNC_RELEASE_REPO_OWNER=$_HNC_REPO_OWNER
    echo "Building HNC manifests and plugin for $$HNC_REGISTRY/$$HNC_IMG_NAME:$$HNC_IMG_TAG"
    make build
    make krew-build
# Upload default manifest
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/manifests/default.yaml'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=default.yaml'
# Upload HA manifest
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/manifests/ha.yaml'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=ha.yaml'
# Upload HRQ manifest
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/manifests/hrq.yaml'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=hrq.yaml'
# Upload cert-manager manifest
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/manifests/default-cm.yaml'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=default-cm.yaml'
# Upload plugin (Linux)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/bin/kubectl/kubectl-hns_linux_amd64'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=kubectl-hns_linux_amd64'
# Upload plugin (Linux arm64)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/bin/kubectl/kubectl-hns_linux_arm64'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=kubectl-hns_linux_arm64'
# Upload plugin (Darwin intel)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/bin/kubectl/kubectl-hns_darwin_amd64'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=kubectl-hns_darwin_amd64'
# Upload plugin (Darwin arm64)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/bin/kubectl/kubectl-hns_darwin_arm64'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=kubectl-hns_darwin_arm64'
# Upload plugin (Windows)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/bin/kubectl/kubectl-hns_windows_amd64.exe'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=kubectl-hns_windows_amd64.exe'
# Upload plugin (Krew tar file)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/bin/kubectl-hns.tar.gz'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=kubectl-hns.tar.gz'
# Upload plugin (Krew manifest file - to add to the Krew index)
- name: gcr.io/cloud-builders/curl
  args:
  - '-X'
  - 'POST'
  - '-H'
  - 'Content-Type: application/x-application'
  - '--data-binary'
  - '@hierarchical-namespaces/manifests/krew-kubectl-hns.yaml'
  - '-u'
  - '$_HNC_USER:$_HNC_PERSONAL_ACCESS_TOKEN'
  - 'https://uploads.github.com/repos/$_HNC_REPO_OWNER/hierarchical-namespaces/releases/$_HNC_RELEASE_ID/assets?name=krew-kubectl-hns.yaml'
# Build Docker image
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_HNC_IMG_NAME:$_HNC_IMG_TAG', 'hierarchical-namespaces']

images: ['gcr.io/$PROJECT_ID/$_HNC_IMG_NAME:$_HNC_IMG_TAG']
